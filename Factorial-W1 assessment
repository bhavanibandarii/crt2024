Repeatedly find the sum of digits of a number until it becomes a single-digit number (say sod). Then compute the factorial of sod and print it.

Input Format

One line containing an integer "n" denoting number

Constraints

1<=n<=10^7

Output Format

One number denoting the factorial of single digit

Sample Input 0

23
Sample Output 0

120
Explanation 0

Sum of digits: 23 --> 2+3 = 5 Factorial of 5 is 120

Sample Input 1

99
Sample Output 1

362880
Explanation 1

sum of digits 99 --> 9+9=18 if result>9 then repeat the same process until single digit 18 --> 1+8=9 Factorial of 9 is 362880

Submissions: 398
Max Score: 40
Difficulty: Medium
Rate This Challenge:

    
More



#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
int sumOfDigits(int num) {
    int sum = 0;
    while (num > 0) {
        sum += num % 10;
        num /= 10;
    }
    return sum;
}
int reduceToSingleDigit(int num) {
    while (num >= 10) {
        num = sumOfDigits(num);
    }
    return num;
}
int factorial(int num) {
    if (num == 0) return 1;
    int result = 1;
    for (int i = 1; i <= num; i++) {
        result *= i;
    }
    return result;
}
int main() {
    int n;
    scanf("%d", &n);
    int singleDigit = reduceToSingleDigit(n);
    int result = factorial(singleDigit);
    printf("%d\n", result);
   /* Enter your code here. Read input from STDIN. Print output to STDOUT */    
    return 0;
}
